% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tweet_threading.R
\name{tweet_threading}
\alias{tweet_threading}
\title{Collect statuses contained in a thread}
\usage{
tweet_threading(
  tw,
  traverse = c("backwards", "forwards"),
  n = 10,
  verbose = FALSE
)
}
\arguments{
\item{tw}{\code{\link[=lookup_statuses]{lookup_statuses()}} output containing
at least the last status in the thread}

\item{traverse}{character, direction to traverse from origin status in tw,
Default: c('backwards','forwards')}

\item{n}{numeric, timeline to fetch to start forwards traversing, Default: 10}

\item{verbose}{logical, Output to console status of traverse, Default: FALSE}
}
\value{
\code{\link[=lookup_statuses]{lookup_statuses()}} tibble
}
\description{
Return all statuses that are part of a thread. By default the function
traverses first backwards from the origin status_id of the thread up to the
root, then checks if there are any child statuses that were posted after
the origin status.
}
\examples{
\dontrun{
tw <- lookup_statuses('1084143184664510470')
tw_thread <- tweet_threading(tw)
tw_thread
}
}
\seealso{
\code{\link[=lookup_statuses]{lookup_statuses()}}
}
